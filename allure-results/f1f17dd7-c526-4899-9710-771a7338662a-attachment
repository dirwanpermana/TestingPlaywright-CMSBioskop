# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Melakukan Login CMS Bioskop dengan data yang valid
- Location: D:\Playing-Playwright\playwrightWithJS\tests\TestingCMSBioskop\loginValid.spec.js:4:1

# Error details

```
Error: locator.click: Target page, context or browser has been closed
Call log:
  - waiting for locator('button[id=\'radix-:rc:\']')
    - locator resolved to <button type="button" id="radix-:rc:" data-state="closed" aria-haspopup="menu" aria-expanded="false" class="inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80 h-9 w-9 rounded-full">â€¦</button>
  - attempting click action
    - waiting for element to be visible, enabled and stable

    at LoginPage.logout (D:\Playing-Playwright\playwrightWithJS\pages\FunctionsCMSBioskop\fungsiLoginLogout.js:42:29)
    at D:\Playing-Playwright\playwrightWithJS\tests\TestingCMSBioskop\loginValid.spec.js:44:21
    at D:\Playing-Playwright\playwrightWithJS\tests\TestingCMSBioskop\loginValid.spec.js:43:14
```

# Test source

```ts
   1 | // Page Object Model utk mempermudah maintenance dan reusable
   2 | const { expect } = require("@playwright/test");
   3 |
   4 | class LoginPage {
   5 |   constructor(page) {
   6 |     this.page = page;
   7 |
   8 |     // Login
   9 |     this.usernameInput = page.getByPlaceholder("Input Email");
  10 |     this.passwordInput = page.getByPlaceholder("Input Password");
  11 |     this.loginButton = page.locator("button[type='submit']");
  12 |     this.headingLogin = page.locator(
  13 |       "//div[@class='tracking-tight text-2xl font-bold text-center']"
  14 |     );
  15 |     // Logout
  16 |     this.dropdownUser = page.locator("button[id='radix-:rc:']");
  17 |     const menuItems = {
  18 |       account: "My Account",
  19 |       settings: "Settings",
  20 |       suport: "Suport",
  21 |       logout: "Logout",
  22 |     };
  23 |     this.pilihLogout = page.getByRole("menuitem", { name: menuItems.logout });
  24 |   }
  25 |   //div[normalize-space()='Logout']
  26 |
  27 |   async gotoLoginPage() {
  28 |     await this.page.goto("http://localhost:5173/admin/login");
  29 |   }
  30 |
  31 |   async verifyLoginPage(username, password) {
  32 |     await expect(this.headingLogin).toBeVisible();
  33 |     await this.usernameInput.fill(username);
  34 |     await this.passwordInput.fill(password);
  35 |   }
  36 |
  37 |   async login() {
  38 |     await this.loginButton.click();
  39 |   }
  40 |
  41 |   async logout() {
> 42 |     await this.dropdownUser.click();
     |                             ^ Error: locator.click: Target page, context or browser has been closed
  43 |     await this.pilihLogout.click();
  44 |   }
  45 | }
  46 |
  47 | module.exports = LoginPage;
  48 |
```