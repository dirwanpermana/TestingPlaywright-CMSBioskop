# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Melakukan Logout dari Aplikasi
- Location: D:\Playing-Playwright\playwright-CMSBioskop\tests\TestingCMSBioskop\loginValid.spec.js:38:1

# Error details

```
Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/admin/login
Call log:
  - navigating to "http://localhost:5173/admin/login", waiting until "load"

    at LoginPage.gotoLoginPage (D:\Playing-Playwright\playwright-CMSBioskop\pages\FunctionsCMSBioskop\fungsiLogin.js:18:21)
    at D:\Playing-Playwright\playwright-CMSBioskop\tests\TestingCMSBioskop\loginValid.spec.js:17:21
    at D:\Playing-Playwright\playwright-CMSBioskop\tests\TestingCMSBioskop\loginValid.spec.js:16:14
```

# Page snapshot

```yaml
- heading "This site canâ€™t be reached" [level=1]
- paragraph:
  - strong: localhost
  - text: refused to connect.
- paragraph: "Try:"
- list:
  - listitem: Checking the connection
  - listitem:
    - link "Checking the proxy and the firewall"
- text: ERR_CONNECTION_REFUSED
- button "Reload"
- button "Details"
```

# Test source

```ts
   1 | // Page Object Model utk mempermudah maintenance dan reusable
   2 | const { expect } = require("@playwright/test");
   3 |
   4 | class LoginPage {
   5 |   constructor(page) {
   6 |     this.page = page;
   7 |
   8 |     // Login
   9 |     this.usernameInput = page.getByPlaceholder("Input Email");
  10 |     this.passwordInput = page.getByPlaceholder("Input Password");
  11 |     this.loginButton = page.locator("button[type='submit']");
  12 |     this.headingLogin = page.locator(
  13 |       "//div[@class='tracking-tight text-2xl font-bold text-center']"
  14 |     );
  15 |   }
  16 |
  17 |   async gotoLoginPage() {
> 18 |     await this.page.goto("http://localhost:5173/admin/login");
     |                     ^ Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:5173/admin/login
  19 |   }
  20 |
  21 |   async verifyLoginPage() {
  22 |     await expect(this.headingLogin).toBeVisible();
  23 |   }
  24 |
  25 |   async login(username, password) {
  26 |     await this.usernameInput.fill(username);
  27 |     await this.passwordInput.fill(password);
  28 |     await this.loginButton.click();
  29 |   }
  30 | }
  31 |
  32 | module.exports = LoginPage;
  33 |
```